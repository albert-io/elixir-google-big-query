# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.BigQuery.V2.Model.QueryRequest do
  @moduledoc """
  

  ## Attributes

  - defaultDataset (DatasetReference): [Optional] Specifies the default datasetId and projectId to assume for any unqualified table names in the query. If not set, all table names in the query string must be qualified in the format &#39;datasetId.tableId&#39;. Defaults to: `null`.
  - dryRun (boolean()): [Optional] If set to true, BigQuery doesn&#39;t run the job. Instead, if the query is valid, BigQuery returns statistics about the job such as how many bytes would be processed. If the query is invalid, an error returns. The default value is false. Defaults to: `null`.
  - kind (String.t): The resource type of the request. Defaults to: `null`.
  - location (String.t): The geographic location where the job should run. Required except for US and EU. Defaults to: `null`.
  - maxResults (integer()): [Optional] The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies. Defaults to: `null`.
  - parameterMode (String.t): Standard SQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use named (@myparam) query parameters in this query. Defaults to: `null`.
  - preserveNulls (boolean()): [Deprecated] This property is deprecated. Defaults to: `null`.
  - query (String.t): [Required] A query string, following the BigQuery query syntax, of the query to execute. Example: \&quot;SELECT count(f1) FROM [myProjectId:myDatasetId.myTableId]\&quot;. Defaults to: `null`.
  - queryParameters ([QueryParameter]): Query parameters for Standard SQL queries. Defaults to: `null`.
  - timeoutMs (integer()): [Optional] How long to wait for the query to complete, in milliseconds, before the request times out and returns. Note that this is only a timeout for the request, not the query. If the query takes longer to run than the timeout value, the call returns without any results and with the &#39;jobComplete&#39; flag set to false. You can call GetQueryResults() to wait for the query to complete and read the results. The default value is 10000 milliseconds (10 seconds). Defaults to: `null`.
  - useLegacySql (boolean()): Specifies whether to use BigQuery&#39;s legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery&#39;s standard SQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as if flattenResults is false. Defaults to: `null`.
  - useQueryCache (boolean()): [Optional] Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. The default value is true. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
    :"defaultDataset" => GoogleApi.BigQuery.V2.Model.DatasetReference.t(),
    :"dryRun" => any(),
    :"kind" => any(),
    :"location" => any(),
    :"maxResults" => any(),
    :"parameterMode" => any(),
    :"preserveNulls" => any(),
    :"query" => any(),
    :"queryParameters" => list(GoogleApi.BigQuery.V2.Model.QueryParameter.t()),
    :"timeoutMs" => any(),
    :"useLegacySql" => any(),
    :"useQueryCache" => any()
  }

  field(:"defaultDataset", as: GoogleApi.BigQuery.V2.Model.DatasetReference)
  field(:"dryRun")
  field(:"kind")
  field(:"location")
  field(:"maxResults")
  field(:"parameterMode")
  field(:"preserveNulls")
  field(:"query")
  field(:"queryParameters", as: GoogleApi.BigQuery.V2.Model.QueryParameter, type: :list)
  field(:"timeoutMs")
  field(:"useLegacySql")
  field(:"useQueryCache")
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.QueryRequest do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.QueryRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.QueryRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end


